CREATE DATABASE social_app;

USE social_app;

CREATE TABLE users (
    id INT NOT NULL AUTO_INCREMENT,
    username VARCHAR(45) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(200) NOT NULL,
    name VARCHAR(45) NOT NULL,
    coverPic VARCHAR(100) NULL,
    profilePic VARCHAR(100) NULL,
    city VARCHAR(45) NULL,
    website VARCHAR(45) NULL,
    PRIMARY KEY (id),
    UNIQUE INDEX email_UNIQUE (email ASC)
);

CREATE TABLE posts (
    id INT NOT NULL AUTO_INCREMENT,
    description VARCHAR(200) NULL,
    img VARCHAR(200) NULL,
    userId INT NOT NULL, 
    createdAt DATETIME NULL, 
    PRIMARY KEY (id),
    UNIQUE INDEX id_UNIQUE (id ASC),
    INDEX userId_idx (userId ASC),
    CONSTRAINT userId
        FOREIGN KEY (userId)
        REFERENCES users (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE TABLE comments (
    id INT NOT NULL AUTO_INCREMENT,
    `desc` VARCHAR(200) NOT NULL,
    createdAt DATETIME NULL,
    userId INT NOT NULL,
    postId INT NOT NULL,
    PRIMARY KEY (id),
    UNIQUE INDEX id_UNIQUE (id ASC),
    INDEX postId_idx (postId ASC),
    INDEX commentuserId_idx (userId ASC),
    CONSTRAINT commentuserId
        FOREIGN KEY (userId)
        REFERENCES users (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT postId
        FOREIGN KEY (postId)
        REFERENCES posts (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE TABLE stories (
    id INT NOT NULL AUTO_INCREMENT,
    img VARCHAR(200) NULL,
    userId INT NOT NULL,
    PRIMARY KEY (id),
    UNIQUE INDEX id_UNIQUE (id ASC),
    INDEX storyUserId_idx (userId ASC),
    CONSTRAINT storyUserId
        FOREIGN KEY (userId)
        REFERENCES users (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE TABLE relationships (
    id INT NOT NULL AUTO_INCREMENT,
    followerUserId INT NOT NULL,
    followedUserId INT NOT NULL,
    PRIMARY KEY (id),
    UNIQUE INDEX id_UNIQUE (id ASC),
    INDEX followerUser_idx (followerUserId ASC),
    INDEX followedUser_idx (followedUserId ASC),
    CONSTRAINT followerUser
        FOREIGN KEY (followerUserId)
        REFERENCES users (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT followedUser
        FOREIGN KEY (followedUserId)
        REFERENCES users (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE TABLE likes (
    id INT NOT NULL AUTO_INCREMENT,
    userId INT NOT NULL,
    postId INT NOT NULL,
    PRIMARY KEY (id),
    UNIQUE INDEX id_UNIQUE (id ASC),
    INDEX likeUserId_idx (userId ASC),
    INDEX likePostId_idx (postId ASC),
    CONSTRAINT likeeUserId
        FOREIGN KEY (userId)
        REFERENCES users (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT likePostId
        FOREIGN KEY (postId)
        REFERENCES posts (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);